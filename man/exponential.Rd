% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exponential.R
\name{exponential}
\alias{exponential}
\title{Exponentiate real numbers}
\usage{
exponential(x, n = 20)
}
\arguments{
\item{x}{The number(s) to exponentiate. This can be a number,
a vector of numbers, or a (numeric) variable in a tibble.
The name was chosen because it is standard for real numbers.}

\item{n}{The number of terms to include in the series approximation.
This must be a whole number at least zero.
The default is 20; smaller numbers may lead to poor accuracy,
while numbers over 100 may lead to numerical problems.
The name was chosen because it is standard for integers.}
}
\value{
The number, vector of numbers or tibble column,
where each number has been exponentiated.
}
\description{
This function computes the exponential of a number,
vector of numbers, or a (numeric) variable in a tibble.
This is done recursively, via a truncated approximation
of the Taylor-series definition of the exponential function.
This function can be used to reverse logarithmic transformations
of numerical variables, as shown in the last example below.
}
\details{
Exponentiate numbers
}
\examples{
# Exponential of a single number
exponential(1)
exponential(2)

# If the `n` parameter is set too low, the function is inaccurate
exponential(1, n = 5)

# Exponential of a vector of numbers
exponential(c(1, 2))

# NA values are handled without error
exponential(c(3, NA))

# Exponential of a numerical variable in a tibble
# (First we load necessary libraries)
library(dplyr)
library(datateachr)

# Take the logarithm of the diameter variable,
# then take the exponential of log_diam variable
log_diam_dataset <- vancouver_trees |>
  filter(diameter > 0) |>
  arrange(desc(diameter)) |>
  select(diameter) |>
  mutate(
    log_diam = log(diameter),
    exp_log_diam = exponential(log_diam)
  )

# View log_diam_dataset
log_diam_dataset

# Check that the diameter
# and exp_log_diameter columns
# are equal
tibble_1 <- log_diam_dataset |> select(diameter)
tibble_2 <- log_diam_dataset |> select(exp_log_diam)
all.equal(tibble_1, tibble_2, check.attributes = FALSE)
}
